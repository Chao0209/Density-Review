tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
}
length(ctry)
dens = list()
yrs = list()
age = list()
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
}
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=1000, dens[[i]], as.vector(age[[i]]), knots = 10)
}
library(robCompositions)
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=1000, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry, "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
library(fda)
for (i in 1:length(ctry_clrgg)) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
for (i in 1:length(ctry_clrgg)) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
length(ctry_clrgg)
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# example, USA
ggplot(data = USA_est_clrgg, aes(x = age, y = dens, color = year))+ geom_line() + labs(title="Mortality Rate, USA\nclr-transformed with B-Spline", x ="Age", y = "Density", color = "Year") +
theme(legend.position=c(0.2,0.3), legend.title = element_text(face = "bold"))
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# example, USA
ggplot(data = USA_est_clrgg, aes(x = age, y = dens, color = year))+ geom_line() + labs(title="Mortality Rate, USA\nclr-transformed with B-Spline", x ="Age", y = "Density", color = "Year") +
theme(legend.position=c(0.2,0.3), legend.title = element_text(face = "bold"))
ctry_clrgg[1]
ctry_clrgg[2]
ctry_clrgg[3]
USA_est_clrgg
AUS_est_clrgg
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# example, USA
ggplot(data = USA_est_clrgg, aes(x = age, y = dens, color = year))+ geom_line() + labs(title="Mortality Rate, USA\nclr-transformed with B-Spline", x ="Age", y = "Density", color = "Year") +
theme(legend.position=c(0.2,0.3), legend.title = element_text(face = "bold"))
ctry
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# example, USA
ggplot(data = USA_est_clrgg, aes(x = age, y = dens, color = year))+ geom_line() + labs(title="Mortality Rate, USA\nclr-transformed with B-Spline", x ="Age", y = "Density", color = "Year") +
theme(legend.position=c(0.2,0.3), legend.title = element_text(face = "bold"))
USA_est_clrgg
yr2008 = matrix(NA, 40, 90)
#fls = fls[-3]
for (i in 1:40) {
tmp = readMat(fls[i])
tmp_yr = as.character(tmp$yr)
tmp_age = as.character(tmp$x)
tmp = tmp$dns
colnames(tmp) = tmp_yr
rownames(tmp) = tmp_age
print(fls[i])
tmp_yr2008 = tmp[, "2008"]
yr2008[i,] = tmp_yr2008
}
yr2008
dim(yr2008)
dSUp
dSup
# lqd
library(fdadensity)
dSup = as.vector(age[[1]])
dSup
yr2008_sparse <- Sparsify(yr2008, dSup, 20)
yr2008_FPCA = FPCA(yr2008_sparse$Ly, yr2008_sparse$Lt)
CreateBWPlot(yr2008_FPCA)
CreateCovPlot(yr2008_FPCA)
plot.FPCA(yr2008_FPCA)
CreateModeOfVarPlot(yr2008_FPCA)
CreateModeOfVarPlot(yr2008_FPCA,k = 1, rainbowPlot = TRUE)
CreateModeOfVarPlot(yr2008_FPCA,k = 2)
CreateModeOfVarPlot(yr2008_FPCA,k = 1)
CreatePathPlot(yr2008_FPCA)
CreateScreePlot(yr2008_FPCA)
CreateBWPlot(yr2008_FPCA)
yr2008_clrgg.df = data.frame(clr = as.vector(t(yr2008_clrgg)), age = rep(dSup, time = 40), country = rep(ctrygg, each = 90))
yr2008gg = data.frame(dens = as.vector(t(yr2008)), age = rep(dSup, time = 40), country = rep(ctrygg, each = 90))
ggplot(data = yr2008gg, aes(x=age, y = dens, color = country)) + geom_line() + labs(title="Mortality Data of 40 Countries, 2008", x ="Age", y = "density", color = "Country") +
theme(legend.position=c(0.1,0.6), legend.title = element_text(face = "bold"))
# prepare clr-transformed data for plot
dens_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
yr2008_clr.fd = list()
for (i in 1:40) {
yr2008_clr.fd[[i]] = smoothSplines(k=3, l=2, alpha=1000, matrix(yr2008[i,], 1,90), dSup, knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
yr2008_clrgg = matrix(NA, 40,90)
for (i in 1:40) {
tmp = fd(t(yr2008_clr.fd[[i]]$bspline), dens_basis)
tmp = eval.fd(dSup, tmp)
yr2008_clrgg[i,] = tmp
}
yr2008_clrgg
yr2008_clr = yr2008_clrgg
# clr
yr2008_clr_sparse = Sparsify(yr2008_clr, dSup, 20)
yr2008_clr_FPCA = FPCA(yr2008_clr_sparse$Ly, yr2008_clr_sparse$Lt)
CreateCovPlot(yr2008_clr_FPCA)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 1)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 2)
CreateCovPlot(yr2008_clr_FPCA)
yr2008_clr_FPCA$FVE
yr2008_clr_FPCA$cumFVE
yr2008_FPCA$cumFVE
?gam
dens = list()
yrs = list()
age = list()
i = 1
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
yrs
dens[[i]] = t(tmp$dns)
dens
dens = list()
yrs = list()
age = list()
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = apply(dens[[i]], 1, function(xx)RegulariseByAlpha(x=age[[i]], y=xx, alpha = 0.0001))
}
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=1000, dens[[i]], as.vector(age[[i]]), knots = 10)
}
smoothSplines()
smoothSplines
dens = list()
yrs = list()
age = list()
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = apply(dens[[i]], 1, function(xx)RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
}
dens[[i]]
dim(dens[[i]])
tmp$dns
dens = list()
yrs = list()
age = list()
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
tmp$dns
dim(dens[[i]])
dim(dens[[1]])
dens[[i]] = t(tmp$dns)
dim(dens[[i]])
fls
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = apply(dens[[i]], 1, function(xx)RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
}
RegulariseByAlpha(x=dSup, y=dens[[i]], alpha = 0.0001)
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
RegulariseByAlpha(x=dSup, y=dens[[i]], alpha = 0.0001)
dens[[i]]
RegulariseByAlpha(x=dSup, y=dens[[i]][1,], alpha = 0.0001)
RegulariseByAlpha(x=dSup, y=dens[[i]][2,], alpha = 0.0001)
RegulariseByAlpha(x=dSup, y=dens[[i]][3,], alpha = 0.0001)
dens = list()
yrs = list()
age = list()
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
}
# smooth clr-transformed data
dens_clr = list()
# smooth clr-transformed data
dens_clr = list()
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=1000, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
warings()
warnings()
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 11, norder = 3)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 3)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 3)
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 3)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 3)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
tmp
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
ctry_clrgg
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 11, norder = 3)
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp
dim(tmp)
yrs[[1]]
dim(dens_clr[[i]]$bspline)
clr_basis
length(yrs[[1]])
i=1
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
dim(tmp)
age[[i]]
as.vector(age[[i]])
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp
dens_clr[[i]]
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
dens[[i]]
dim(dens[[i]])
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
fls
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dim(dens[[i]] )
dens_clr[[i]] = smoothSplines(k=3, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 12, norder = 4)
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp
dim(tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
dens = list()
dens[[i]] = apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
dens[[i]]
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
dim(dens[[i]])
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dim(dens[[i]])
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = t(apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001)))
dim( dens[[i]])
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = t(as.matrix(apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))))
dim(dens[[i]])
apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
dim(apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001)))
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dim(dens[[i]] )
dens[[i]] = apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))
dim(dens[[i]] )
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = t(apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001)))
dim(dens[[i]])
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
dens = list()
yrs = list()
age = list()
for (i in 1:40) {
tmp = readMat(fls[i])
yrs[[i]] = as.character(tmp$yr)
age[[i]] = tmp$x
dens[[i]] = t(tmp$dns)
dens[[i]] = t(as.matrix(apply(dens[[i]], 1, function(xx) RegulariseByAlpha(x=dSup, y=xx, alpha = 0.0001))))
}
# smooth clr-transformed data
dens_clr = list()
for (i in 1:40) {
dens_clr[[i]] = smoothSplines(k=2, l=2, alpha=100, dens[[i]], as.vector(age[[i]]), knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
ctry_clrgg = paste(ctry[-3], "clrgg", sep = "_")
clr_basis = create.bspline.basis(c(20.5,109.5), nbasis = 11, norder = 3)
for (i in 1:40) {
tmp = fd(t(dens_clr[[i]]$bspline), clr_basis)
tmp = eval.fd(as.vector(age[[i]]), tmp)
tmp_mat = data.frame(dens = as.vector(tmp), year = rep(as.character(yrs[[i]]), each = length(as.vector(age[[i]]))), age = rep(as.vector(age[[i]]), times = length(yrs[[i]])))
assign(ctry_clrgg[i], tmp_mat)
}
# example, USA
ggplot(data = USA_est_clrgg, aes(x = age, y = dens, color = year))+ geom_line() + labs(title="Mortality Rate, USA\nclr-transformed with B-Spline", x ="Age", y = "Density", color = "Year") +
theme(legend.position=c(0.2,0.3), legend.title = element_text(face = "bold"))
dim(yr2008)
yr2008 = apply(yr2008, 1, function(xx) RegulariseByAlpha(dSup, xx, alpha = 1e-4))
dim(yr2008)
yr2008 = t(as.matrix(apply(yr2008, 1, function(xx) RegulariseByAlpha(dSup, xx, alpha = 1e-4))))
as.matrix(apply(yr2008, 1, function(xx) RegulariseByAlpha(dSup, xx, alpha = 1e-4)))
yr2008 = matrix(NA, 40, 90)
#fls = fls[-3]
for (i in 1:40) {
tmp = readMat(fls[i])
tmp_yr = as.character(tmp$yr)
tmp_age = as.character(tmp$x)
tmp = tmp$dns
colnames(tmp) = tmp_yr
rownames(tmp) = tmp_age
print(fls[i])
tmp_yr2008 = tmp[, "2008"]
yr2008[i,] = tmp_yr2008
}
yr2008 = t(as.matrix(apply(yr2008, 1, function(xx) RegulariseByAlpha(dSup, xx, alpha = 1e-4))))
yr2008
# prepare clr-transformed data for plot
dens_basis = create.bspline.basis(c(20.5,109.5), nbasis = 11, norder = 3)
yr2008_clr.fd = list()
for (i in 1:40) {
yr2008_clr.fd[[i]] = smoothSplines(k=2, l=2, alpha=100, matrix(yr2008[i,], 1,90), dSup, knots = 10)
}
# prepare clr-transformed data for plot
# prepare densities for ggplot
yr2008_clrgg = matrix(NA, 40,90)
for (i in 1:40) {
tmp = fd(t(yr2008_clr.fd[[i]]$bspline), dens_basis)
tmp = eval.fd(dSup, tmp)
yr2008_clrgg[i,] = tmp
}
# clr
yr2008_clr = yr2008_clrgg
yr2008_clr_sparse = Sparsify(yr2008_clr, dSup, 20)
yr2008_clr_FPCA = FPCA(yr2008_clr_sparse$Ly, yr2008_clr_sparse$Lt)
CreateCovPlot(yr2008_clr_FPCA)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 1)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 2)
yr2008_clr_FPCA$cumFVE
# Create FPCA object (fdapace)
# original density
yr2008_sparse = Sparsify(yr2008, dSup, 20)
yr2008_FPCA = FPCA(yr2008_sparse$Ly, yr2008_sparse$Lt)
CreateCovPlot(yr2008_FPCA)
CreateCovPlot(yr2008_clr_FPCA)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 1)
CreateModeOfVarPlot(yr2008_clr_FPCA,k = 1)
